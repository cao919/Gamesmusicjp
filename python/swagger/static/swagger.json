{
  "openapi": "3.0.0",
  "info": {
    "description": "Sean n' wayneW",
    "version": "1.6.5",
    "title": "Seans_Waynes-Python3-Flask-Rest-Boilerplate",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Book Request",
      "description": "Example API for requesting and return book requests"
    }
  ],
  "paths": {
    "/request": {
      "get": {
        "tags": [
          "Book Request"
        ],
        "summary": "Returns bookRequests",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequests"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Book Request"
        ],
        "summary": "Create a new book request system",
        "requestBody": {
          "description": "Book Request Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bookRequestPostBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/request/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the cat that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Book Request"
        ],
        "summary": "Get book request with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequest"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Book request not found."
          }
        }
      },
      "put": {
        "summary": "edit a book request by ID",
        "tags": [
          "Book Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "description": "Book Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bookRequest"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequest"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete Book Request by ID",
        "tags": [
          "Book Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request Id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Book Request not found."
          }
        }
      },
      "IMG trans": {
         "summary": "Example API for editing image requests",
         "tags": [
           "Book Request"
         ],
         "parameters": [
           {
             "in": "path",
             "name": "effects",
             "required": true,
             "description": "edit a image, like adding effects",
             "schema": {
               "$ref": "#/components/schemas/id"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "OK",
             "schema": {
               "$ref": "#/components/schemas/id"
              }
            },
           "400": {
             "description": "Failed. Misunderstood Request."
            },
           "404": {
             "description": "Failed. IMG Request not found."
            }
          }
        }  
      }
    },
  "tags1": [
    {
      "name": "Image Request",
      "description": "Example API for editing image requests"
    }
  ],
  "paths1": {
    "image": {
      "summary": "edit a image, like adding effects",
      "tags": [
        "Image Request"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "image path",
          "schema": {
            "$ref": "#/components/schemas/id"
          }
        }
      ],
      "requestBody": {
        "description": "Image Request Object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/bookRequest"
            }
          }
        }
      },
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/components/schemas/bookRequest"
          }
        },
        "400": {
          "description": "Failed. Bad path."
        }
      }
    }
  },
  "tags1": [
    {
      "name": "Image Request",
      "description": "Example API for editing image requests"
    }
  ],
  "paths1": {
    "image": {
      "summary": "edit a image, like adding effects",
      "tags": [
        "Image Request"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "image path",
          "schema": {
            "$ref": "#/components/schemas/id"
          }
        }
      ],
      "requestBody": {
        "description": "Image Request Object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/bookRequest"
            }
          }
        }
      },
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/components/schemas/bookRequest"
          }
        },
        "400": {
          "description": "Failed. Bad path."
        }
      }
    }
  },


  "components": {
    "schemas": {
      "id": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "bookRequestPostBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "bookRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "timestamp": {
            "type": "string",
            "format": "number"
          }
        }
      },
      "bookRequests": {
        "type": "object",
        "properties": {
          "bookRequest": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/bookRequest"
            }
          }
        }
      }
    }
  }
}